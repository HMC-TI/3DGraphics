package com.example.daudiodemo;

import android.app.Activity;
import android.content.Context;
import android.opengl.GLSurfaceView;
import android.os.Bundle;
import android.view.KeyEvent;

public class DemoGraphics extends Activity 
{
	/** Hold a reference to our GLSurfaceView */
	private MyGLSurfaceView mGLSurfaceView;

	@Override
	public void onCreate(Bundle savedInstanceState) 
	{
		super.onCreate(savedInstanceState);
		mGLSurfaceView = new MyGLSurfaceView(this);
		setContentView(mGLSurfaceView);
	}

	@Override
	protected void onResume() 
	{
		// The activity must call the GL surface view's onResume() on activity onResume().
		super.onResume();
		mGLSurfaceView.onResume();
	}

	@Override
	protected void onPause() 
	{
		// The activity must call the GL surface view's onPause() on activity onPause().
		super.onPause();
		mGLSurfaceView.onPause();
	}	
}

class MyGLSurfaceView extends GLSurfaceView {

    private final DemoRenderer mRenderer;

    public MyGLSurfaceView(Context context) {
        super(context);

        // Create an OpenGL ES 2.0 context.
        setEGLContextClientVersion(2);

        // Set the Renderer for drawing on the GLSurfaceView
        mRenderer = new DemoRenderer();
        setRenderer(mRenderer);

        // Render the view only when there is a change in the drawing data
        setRenderMode(GLSurfaceView.RENDERMODE_WHEN_DIRTY);
    }
    
    /* Help function to parse the Gametel key */ 
    private boolean handleKeyEvent(int keyCode, KeyEvent event) {
        boolean pressed = event.getAction() == KeyEvent.ACTION_DOWN;
        
        switch (keyCode) {
        
        /* Upper navigation button */
        case KeyEvent.KEYCODE_DPAD_UP:
            break;
            
           /* Right navigation button */
        case KeyEvent.KEYCODE_DPAD_RIGHT:
            break;
            
        /* Lower navigation button */
        case KeyEvent.KEYCODE_DPAD_DOWN:
            break;
            
        /* Left navigation button */
        case KeyEvent.KEYCODE_DPAD_LEFT:
            break;
                        
        /* Start button */
        case KeyEvent.KEYCODE_BUTTON_START:
            break;
            
        /* Select button */
        case KeyEvent.KEYCODE_BUTTON_SELECT:
            break;
            
        /* Left trigger button */
        case KeyEvent.KEYCODE_BUTTON_L1:
            break;
            
        /* Right trigger button */
        case KeyEvent.KEYCODE_BUTTON_R1:
            break;

        /* Upper action button */
        case KeyEvent.KEYCODE_BUTTON_Y:
            break;
            
           /* Right action button - can either be BACK+ALT or BUTTON_C depending on device mode */
        case KeyEvent.KEYCODE_BACK:
            break;
        case KeyEvent.KEYCODE_BUTTON_C:
            break;

        /* Lower action button - can either be DPAD_CENTER or BUTTON_Z depending on device mode */
        case KeyEvent.KEYCODE_DPAD_CENTER:
        case KeyEvent.KEYCODE_BUTTON_Z:
            break;
            
           /* Left action button */
        case KeyEvent.KEYCODE_BUTTON_X:
            break;
            
        default:
            return false;
        }
        return true;
    }
}